
version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: BE/Dockerfile
      target: production
      args:
        - NODE_ENV=production
    ports:
      - "${BACKEND_PORT:-3001}:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - HOST=0.0.0.0
      - API_URL=${API_URL:-https://api.cloudflare.com/client/v4}
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/api/cloudflare/test-connection', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) }).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M

  frontend:
    build:
      context: .
      dockerfile: FE/Dockerfile
      target: production
      args:
        - NODE_ENV=production
    ports:
      - "${FRONTEND_PORT:-8080}:8080"
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - BACKEND_SERVICE_URL=http://backend:${BACKEND_PORT:-3001}
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /var/cache/nginx:noexec,nosuid,size=50m
      - /var/run:noexec,nosuid,size=50m
      - /tmp:noexec,nosuid,size=50m
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 64M

networks:
  app-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: cloudflare-navigator
